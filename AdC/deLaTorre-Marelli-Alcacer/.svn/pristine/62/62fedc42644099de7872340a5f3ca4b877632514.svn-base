.text
  .global buscar_caracter
    buscar_caracter:
      movq %rcx, %r9
      movq %rdx, %rcx
      movb %sil, %al
      xorq %r8, %r8
      cld
      repetir1:
        scasb
        je fin1
        incq %r8
        loop repetir1
        movq $-1, %r8

      fin1:
        movq %r8, %rax
        movq %r9, %rcx
        ret

  .global comparar_cadenas
    comparar_cadenas:
      movq %rcx, %r9
      movq %rdx, %rcx
      cld
      repetir2:
        cmpsb
        jnz diferente
        loop repetir2

        movq $0, %rax
        movq %r9, %rcx
        ret

      diferente:
        movq %r9, %rcx
        decq %rsi
        decq %rdi
        cmpsb
        ja menor

        movq $1, %rax
        ret

      menor:
        movq $-1, %rax
        ret

# TODO: Documentar
  .global fuerza_bruta
    fuerza_bruta:
      movq %rsi, %r10

      # %r11 = ls
      # %r12 = lS - ls + 1

      movq %rcx, %r11

      # rdx = lS - ls + 1
      subq %rcx, %rdx
      incq %rdx
      movq %rdx, %r12

      xorq %r15, %r15

    repetir3:
      movb (%rsi), %sil
      call buscar_caracter # nos cambia %rdi, %rsi
      cmpq $-1, %rax
      je fin2


      # preservar registros
      movq %rax, %r13 # %r13 = i
      movq %rdi, %r14 # %r14 = cadena1 + i

      # preparar argumentos para comparar_cadena
      movq %r10, %rsi
      movq %r11, %rdx # %rdx = ls
      decq %rdi
      call comparar_cadenas

      cmpq $0, %rax
      je encontrado

      addq %r13, %r15
      incq %r15

      # restaurando registros
      movq %r14, %rdi
      movq %r10, %rsi
      movq %r12, %rdx
      subq %r13, %rdx
      movq %rdx, %r12
      jmp repetir3

    encontrado:
      addq %r15, %r13
      movq %r13, %rax
      ret

    fin2:
      ret
